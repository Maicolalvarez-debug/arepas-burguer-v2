import { NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';
import { productSchema } from '@/schemas/product';
export async function POST(req: Request){ try{ const data = productSchema.parse(await req.json()); const created = await prisma.product.create({ data: { name:data.name, description:data.description??'', categoryId:data.categoryId??null, price:data.price, cost:data.cost, stock:data.stock }}); return NextResponse.json(created,{status:201}); } catch(e:any){ return NextResponse.json({error:e.message},{status:400}); }}
export async function PUT(req: Request){ try{ const data = productSchema.parse(await req.json()); if(!data.id) throw new Error('Falta id'); const updated = await prisma.product.update({ where:{id:data.id}, data:{ name:data.name, description:data.description??'', categoryId:data.categoryId??null, price:data.price, cost:data.cost, stock:data.stock }}); return NextResponse.json(updated); } catch(e:any){ return NextResponse.json({error:e.message},{status:400}); }}