import { NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';
import { categorySchema } from '@/schemas/category';
export async function POST(req: Request){ try{ const data = categorySchema.parse(await req.json()); const created = await prisma.category.create({ data:{ name:data.name }}); return NextResponse.json(created,{status:201}); } catch(e:any){ return NextResponse.json({error:e.message},{status:400}); }}
export async function PUT(req: Request){ try{ const data = categorySchema.extend({ id: categorySchema.shape.id.required() }).parse(await req.json()); const updated = await prisma.category.update({ where:{ id:data.id! }, data:{ name:data.name }}); return NextResponse.json(updated); } catch(e:any){ return NextResponse.json({error:e.message},{status:400}); }}
export async function DELETE(req: Request){ const { id } = await req.json(); if(!id) return NextResponse.json({error:'Falta id'},{status:400}); await prisma.category.delete({ where:{ id } }); return NextResponse.json({ok:true}); }